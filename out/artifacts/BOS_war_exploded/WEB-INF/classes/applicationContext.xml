<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx.xsd">



    <!--加载jdbc属性文件-->
    <context:property-placeholder  location="classpath:jdbc.properties"/>

    <!--数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driverClass}"></property>
        <property name="jdbcUrl" value="${jdbcUrl}"></property>
        <property name="user" value="${user}"></property>
        <property name="password" value="${password}"></property>
    </bean>

    <!--Spring框架用于整合hibernate的工厂bean sessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <!-- 数据源-->
        <property name="dataSource" ref="dataSource"/>
        <!-- hibernate的其它配置-->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
            </props>
        </property>

        <!-- hibernate映射文件-->
        <property name="mappingDirectoryLocations">
            <list>
               <value>classpath:com/lp/bos/model</value>
            </list>
        </property>
    </bean>

    <!--事务管理器:如果在service中使用注解来配置事务，
    默认是通过transactionManager的id来查找事物管理器-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>


    <!-- 配置hiberante的模版 bean-->
    <bean class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <!--组件扫描-->
    <context:component-scan base-package="com.lp.bos.*"/>

    <!--引用注解解析器-->
    <context:annotation-config></context:annotation-config>

    <!--开启事务注解-->
    <tx:annotation-driven></tx:annotation-driven>


    <!-- 配置远程调用的service-->
    <bean id="customerService" class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
        <property name="serviceInterface" value="com.lp.crm.service.CustomerService"></property>
        <property name="serviceUrl" value="http://localhost:8082/remoting/customer"/>
    </bean>

    <!-- 配置shiro相关内容-->
    <!--1.配置id为shiroFilter的工厂bean
        注意:id的名字要与过滤器中配置的一样
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"></property>
        <!--配置登录页面-->
        <property name="loginUrl" value="/login.jsp"></property>

        <!--配置拦截规则
        permission：权限-->
        <property name="filterChainDefinitions">
            <value>
                /validatecode.jsp* = anon
                /user_login.action = anon
                /* = authc
            </value>
        </property>
    </bean>
    <!--2.配置shiro的安全管理者-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--配置一realm对象-->
        <property name="realm" ref="realm"></property>
    </bean>
    <!--3.配置一个realm对象,这个对象要实现写一个实现类,实现抽象类AuthorizingRealm-->
    <bean id="realm" class="com.lp.bos.web.realm.BOSRealm"></bean>

    <!--4.如果要使用注解来配置权限，需要声明一个代理和切面
        自动代理，会自动扫描权限注解
    -->
<!--    <bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">-->
<!--        &lt;!&ndash;使用cglib实现代理&ndash;&gt;-->
<!--        <property name="proxyTargetClass" value="true"></property>-->
<!--    </bean>-->
<!--    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor"></bean>-->
<!--        &lt;!&ndash;配置action&ndash;&gt;-->
<!--    <bean class="com.lp.bos.web.action.StaffAction" scope="prototype"></bean>-->
</beans>